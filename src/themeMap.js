// TODO: add utility to go between theme map representations (and pick a default to use)
// const themeMap_flipped = {
//   borders: [
//     'border',
//     'borderTop',
//     'borderRight',
//     'borderBottom',
//     'borderLeft',
//     'borderBlock',
//     'borderBlockEnd',
//     'borderBlockStart',
//     'borderInline',
//     'borderInlineEnd',
//     'borderInlineStart'
//   ],
//   borderStyles: [
//     'borderStyle',
//     'borderTopStyle',
//     'borderRightStyle',
//     'borderBottomStyle',
//     'borderLeftStyle',
//     'borderBlockEndStyle',
//     'borderBlockStartStyle',
//     'borderBlockStyle',
//     'borderInlineEndStyle',
//     'borderInlineStartStyle',
//     'borderInlineStyle'
//   ],
//   borderWidths: [
//     'borderWidth',
//     'borderTopWidth',
//     'borderRightWidth',
//     'borderBottomWidth',
//     'borderLeftWidth',
//     'borderBlockEndWidth',
//     'borderBlockStartWidth',
//     'borderBlockWidth',
//     'borderInlineEndWidth',
//     'borderInlineStartWidth',
//     'borderInlineWidth'
//   ],
//   colors: [
//     'color',
//     'backgroundColor',
//     'borderColor',
//     'caretColor',
//     'columnRuleColor',
//     'borderTopColor',
//     'borderRightColor',
//     'borderBottomColor',
//     'borderLeftColor',
//     'outlineColor',
//     'fill',
//     'stroke'
//   ],
//   fonts: ['fontFamily'],
//   fontSizes: ['fontSize'],
//   fontWeights: ['fontWeight'],
//   letterSpacings: ['letterSpacing'],
//   lineHeights: ['lineHeight'],
//   opacities: ['opacity'],
//   radii: [
//     'borderRadius',
//     'borderTopRightRadius',
//     'borderTopLeftRadius',
//     'borderBottomRightRadius',
//     'borderBottomLeftRadius',
//     'borderEndEndRadius',
//     'borderEndStartRadius',
//     'borderStartEndRadius',
//     'borderStartStartRadius'
//   ],
//   shadows: ['boxShadow', 'textShadow'],
//   sizes: [
//     // width
//     'width',
//     'minWidth',
//     'maxWidth',
//     // height
//     'height',
//     'minHeight',
//     'maxHeight',
//     // flex-basis
//     'flexBasis',
//     // size
//     'size',
//     'blockSize',
//     'inlineSize',
//     'maxBlockSize',
//     'maxInlineSize',
//     'minBlockSize',
//     'minInlineSize'
//   ],
//   space: [
//     // margin
//     'margin',
//     'marginTop',
//     'marginRight',
//     'marginBottom',
//     'marginLeft',
//     'marginX',
//     'marginY',
//     'marginBlock',
//     'marginBlockEnd',
//     'marginBlockStart',
//     'marginInline',
//     'marginInlineEnd',
//     'marginInlineStart',
//     // padding
//     'padding',
//     'paddingTop',
//     'paddingRight',
//     'paddingBottom',
//     'paddingLeft',
//     'paddingX',
//     'paddingY',
//     'paddingBlock',
//     'paddingBlockEnd',
//     'paddingBlockStart',
//     'paddingInline',
//     'paddingInlineEnd',
//     'paddingInlineStart',
//     // inset
//     'inset',
//     'insetBlock',
//     'insetBlockEnd',
//     'insetBlockStart',
//     'insetInline',
//     'insetInlineEnd',
//     'insetInlineStart',
//     // position
//     'top',
//     'right',
//     'bottom',
//     'left',
//     // gap
//     'gridGap',
//     'gridColumnGap',
//     'gridRowGap',
//     'gap',
//     'columnGap',
//     'rowGap'
//   ],
//   zIndices: ['zIndex']
// }

const themeMap = {
  color: 'colors',
  backgroundColor: 'colors',
  borderColor: 'colors',
  caretColor: 'colors',
  columnRuleColor: 'colors',
  opacity: 'opacities',
  margin: 'space',
  marginTop: 'space',
  marginRight: 'space',
  marginBottom: 'space',
  marginLeft: 'space',
  marginX: 'space',
  marginY: 'space',
  marginBlock: 'space',
  marginBlockEnd: 'space',
  marginBlockStart: 'space',
  marginInline: 'space',
  marginInlineEnd: 'space',
  marginInlineStart: 'space',
  padding: 'space',
  paddingTop: 'space',
  paddingRight: 'space',
  paddingBottom: 'space',
  paddingLeft: 'space',
  paddingX: 'space',
  paddingY: 'space',
  paddingBlock: 'space',
  paddingBlockEnd: 'space',
  paddingBlockStart: 'space',
  paddingInline: 'space',
  paddingInlineEnd: 'space',
  paddingInlineStart: 'space',
  inset: 'space',
  insetBlock: 'space',
  insetBlockEnd: 'space',
  insetBlockStart: 'space',
  insetInline: 'space',
  insetInlineEnd: 'space',
  insetInlineStart: 'space',
  top: 'space',
  right: 'space',
  bottom: 'space',
  left: 'space',
  gridGap: 'space',
  gridColumnGap: 'space',
  gridRowGap: 'space',
  gap: 'space',
  columnGap: 'space',
  rowGap: 'space',
  fontFamily: 'fonts',
  fontSize: 'fontSizes',
  fontWeight: 'fontWeights',
  lineHeight: 'lineHeights',
  letterSpacing: 'letterSpacings',
  border: 'borders',
  borderTop: 'borders',
  borderRight: 'borders',
  borderBottom: 'borders',
  borderLeft: 'borders',
  borderWidth: 'borderWidths',
  borderStyle: 'borderStyles',
  borderRadius: 'radii',
  borderTopRightRadius: 'radii',
  borderTopLeftRadius: 'radii',
  borderBottomRightRadius: 'radii',
  borderBottomLeftRadius: 'radii',
  borderTopWidth: 'borderWidths',
  borderTopColor: 'colors',
  borderTopStyle: 'borderStyles',
  borderBottomWidth: 'borderWidths',
  borderBottomColor: 'colors',
  borderBottomStyle: 'borderStyles',
  borderLeftWidth: 'borderWidths',
  borderLeftColor: 'colors',
  borderLeftStyle: 'borderStyles',
  borderRightWidth: 'borderWidths',
  borderRightColor: 'colors',
  borderRightStyle: 'borderStyles',
  borderBlock: 'borders',
  borderBlockEnd: 'borders',
  borderBlockEndStyle: 'borderStyles',
  borderBlockEndWidth: 'borderWidths',
  borderBlockStart: 'borders',
  borderBlockStartStyle: 'borderStyles',
  borderBlockStartWidth: 'borderWidths',
  borderBlockStyle: 'borderStyles',
  borderBlockWidth: 'borderWidths',
  borderEndEndRadius: 'radii',
  borderEndStartRadius: 'radii',
  borderInline: 'borders',
  borderInlineEnd: 'borders',
  borderInlineEndStyle: 'borderStyles',
  borderInlineEndWidth: 'borderWidths',
  borderInlineStart: 'borders',
  borderInlineStartStyle: 'borderStyles',
  borderInlineStartWidth: 'borderWidths',
  borderInlineStyle: 'borderStyles',
  borderInlineWidth: 'borderWidths',
  borderStartEndRadius: 'radii',
  borderStartStartRadius: 'radii',
  outlineColor: 'colors',
  boxShadow: 'shadows',
  textShadow: 'shadows',
  zIndex: 'zIndices',
  width: 'sizes',
  minWidth: 'sizes',
  maxWidth: 'sizes',
  height: 'sizes',
  minHeight: 'sizes',
  maxHeight: 'sizes',
  flexBasis: 'sizes',
  size: 'sizes',
  blockSize: 'sizes',
  inlineSize: 'sizes',
  maxBlockSize: 'sizes',
  maxInlineSize: 'sizes',
  minBlockSize: 'sizes',
  minInlineSize: 'sizes',
  // svg
  fill: 'colors',
  stroke: 'colors'
}

export default themeMap
